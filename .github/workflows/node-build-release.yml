name: 'Node - Build and Release'

on:
  workflow_call:
    inputs:
      node_version:
        required: false
        type: string
        default: '22.15'
      output_path:
        required: false
        type: string
        default: './dist'
      zipped_paths:
        required: false
        type: string
        default: './dist ./deploy'
      image_name:
        required: false
        type: string
        default: '${{ github.repository }}'
      image_tag:
        required: false
        type: string
        default: '${{ github.ref_name }}'
      image_registry:
        required: false
        type: string
        default: 'ghcr.io'
      dockerfile_path:
        required: false
        type: string
        default: './Dockerfile'

jobs:
  build-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.4.0
        with:
          node-version: ${{ inputs.node_version }}

      - name: Cache Node dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Extract name and version
        id: extract_info
        run: |
          ARTIFACT_NAME=$(node -p "require('./package.json').name")
          ARTIFACT_VERSION=$(node -p "require('./package.json').version")
          echo "final_name=$ARTIFACT_NAME-$ARTIFACT_VERSION" >> $GITHUB_OUTPUT

      - name: Install Dependencies
        run: npm ci

      - name: Run build
        run: |
          npx ng build --output-path=${{ inputs.output_path }}

      - name: Zip build artifacts
        run: |
          zip -r ${{ steps.extract_info.outputs.final_name }}.zip ${{ inputs.zipped_paths }}

      - name: Log in to Image Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.image_registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ inputs.image_registry }}/${{ inputs.image_name }}:${{ inputs.image_tag }}
            ${{ inputs.image_registry }}/${{ inputs.image_name }}:latest
          file: ${{ inputs.dockerfile_path }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ github.ref_name }}"
          release_name: "${{ github.ref_name }}"
          body: |
            ## Changes in this Release
            
            ### Docker Images
            - Container Image Registry: `${{ inputs.image_registry }}/${{ inputs.image_name }}:${{ inputs.image_tag }}`

            ### Artifacts
            - Artifact is attached to this release
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ github.ref_name }}...HEAD
          draft: false
          prerelease: false

      - name: Upload Zip artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.extract_info.outputs.final_name }}.zip
          asset_name: ${{ steps.extract_info.outputs.final_name }}.zip
          asset_content_type: application/zip
