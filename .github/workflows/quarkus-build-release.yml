name: 'Quarkus - Build and Release'

on:
  workflow_call:
    inputs:
      java_version:
        required: false
        type: string
        default: '21'
      java_distribution:
        required: false
        type: string
        default: 'temurin'
      maven_version:
        required: false
        type: string
        default: '3.9.6'
      image_name:
        required: false
        type: string
        default: '${{ github.repository }}'
      image_tag:
        required: false
        type: string
        default: '${{ github.ref_name }}'
      image_registry:
        required: false
        type: string
        default: 'ghcr.io'
      dockerfile_path:
        required: false
        type: string
        default: './src/main/docker/Dockerfile.jvm'

jobs:
  build-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java ${{ inputs.java_version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java_version }}
          distribution: ${{ inputs.java_distribution }}

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: ${{ inputs.maven_version }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Extract artifactId and version
        id: extract_info
        run: |
          ARTIFACT_FINALNAME=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout)
          echo "final_name=$ARTIFACT_FINALNAME" >> $GITHUB_OUTPUT

      - name: Run build
        run: |
          mvn clean package

      - name: Log in to Image Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.image_registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ inputs.image_registry }}/${{ inputs.image_name }}:${{ inputs.image_tag }}
            ${{ inputs.image_registry }}/${{ inputs.image_name }}:latest
          file: ${{ inputs.dockerfile_path }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ github.ref_name }}"
          release_name: "${{ github.ref_name }}"
          body: |
            ## Changes in this Release
            
            ### Docker Images
            - Container Image: `${{ inputs.image_registry }}/${{ inputs.image_name }}:${{ inputs.image_tag }}`
            - Container Image: `${{ inputs.image_registry }}/${{ inputs.image_name }}:latest`

            ### Artifacts
            - JAR artifact is attached to this release
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ github.ref_name }}...HEAD
          draft: false
          prerelease: false

      - name: Upload JAR artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/${{ steps.extract_info.outputs.final_name }}.jar
          asset_name: ${{ steps.extract_info.outputs.final_name }}.jar
          asset_content_type: application/java-archive
